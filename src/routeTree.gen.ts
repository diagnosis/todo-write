/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'

const PostLazyRouteImport = createFileRoute('/post')()
const EditIdLazyRouteImport = createFileRoute('/edit/$id')()

const PostLazyRoute = PostLazyRouteImport.update({
  id: '/post',
  path: '/post',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/post.lazy').then((d) => d.Route))
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EditIdLazyRoute = EditIdLazyRouteImport.update({
  id: '/edit/$id',
  path: '/edit/$id',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/edit.$id.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/post': typeof PostLazyRoute
  '/edit/$id': typeof EditIdLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/post': typeof PostLazyRoute
  '/edit/$id': typeof EditIdLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/post': typeof PostLazyRoute
  '/edit/$id': typeof EditIdLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/post' | '/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/post' | '/edit/$id'
  id: '__root__' | '/' | '/post' | '/edit/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PostLazyRoute: typeof PostLazyRoute
  EditIdLazyRoute: typeof EditIdLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/post': {
      id: '/post'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof PostLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/edit/$id': {
      id: '/edit/$id'
      path: '/edit/$id'
      fullPath: '/edit/$id'
      preLoaderRoute: typeof EditIdLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PostLazyRoute: PostLazyRoute,
  EditIdLazyRoute: EditIdLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
